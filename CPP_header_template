C++ CLASS TEMPLATE :

#parse("C File Header.h")
#[[#ifndef]]# ${INCLUDE_GUARD}
#[[#define]]# ${INCLUDE_GUARD}
#set( $COPY = "copy" )
#set( $CANONICAL_COMMENT = "// Canonical");

${NAMESPACES_OPEN}

class ${NAME} {

public:
    ${NAME}(); ${CANONICAL_COMMENT}
    ${NAME}(${NAME} const &${COPY}); ${CANONICAL_COMMENT}
    ~${NAME}; ${CANONICAL_COMMENT}

    ${NAME} &operator=(${NAME} const &${COPY}); ${CANONICAL_COMMENT}    
    
 private:

};

${NAMESPACES_CLOSE}

#[[#endif]]# //${INCLUDE_GUARD}


C++ HEADER TEMPLATE:
#[[#include]]# "${HEADER_FILENAME}"
#set( $COPY = "copy" )

${NAME}::${NAME}() {

}

${NAME}::${NAME}(${NAME} const &${COPY}) {
    *this = copy;
}

${NAME}::~${NAME}() {

}

${NAME} &${NAME}::operator=(${NAME} const &${COPY}) {
    if (this != &${COPY}) {
        // copy 
    }
    return *this;
}
